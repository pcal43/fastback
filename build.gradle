plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'com.matthewprenger.cursegradle'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url 'https://maven.nucleoid.xyz' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

configurations {
	// configuration that holds jars to include in the jar
	extraLibs
}

project.ext.versions = [
    jgit                        : '6.2.0.202206071550-r',
    apache_sshd                 : '2.8.0',
    JavaEWAH                    : '1.1.13',
    fabric_permissions          : '0.2-SNAPSHOT',
    server_translations         : '[1.4.17+1.19.2]',
	junit_jupiter               : '5.8.2',
	eddsa                       : '0.3.0',
	test_log4j                  : '2.16.0'
]

dependencies {
	// Fabric & Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // JGit
	include implementation("org.eclipse.jgit:org.eclipse.jgit:${versions.jgit}")  { transitive = false }
	include runtimeOnly("com.googlecode.javaewah:JavaEWAH:${version:versions.JavaEWAH}")  { transitive = false }

	// FIXME
	include /*runtimeOnly*/("org.eclipse.jgit:org.eclipse.jgit.ssh.apache:${versions.jgit}") { transitive = false }
	include /*runtimeOnly*/("org.apache.sshd:sshd-common:${versions.apache_sshd}") { transitive = false }
	include runtimeOnly("org.apache.sshd:sshd-core:${versions.apache_sshd}") { transitive = false }

	// Enable ed25519 support in apache_sshd
	// https://github.com/apache/mina-sshd/blob/dfa109b7b535d64e8ee395ddd0419e7696fb24ee/docs/dependencies.md
	include runtimeOnly("net.i2p.crypto:eddsa:${versions.eddsa}") { transitive = false }

	// https://github.com/lucko/fabric-permissions-api
	include modImplementation("fr.catcore:server-translations-api:${versions.server_translations}") { transitive = false }
	include modRuntimeOnly("xyz.nucleoid:packet-tweaker:0.3.0+1.18.2") { transitive = false }

	// https://github.com/lucko/fabric-permissions-api
	include modImplementation("me.lucko:fabric-permissions-api:${versions.fabric_permissions}") { transitive = false }

	// JUnit
	testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit_jupiter}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit_jupiter}"
	testRuntimeOnly "org.apache.logging.log4j:log4j-core:${versions.test_log4j}"
}


test {
	useJUnitPlatform()
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	// localizations need to be under data for server-translations-api
	copy {
		from "$projectDir/src/main/resources/assets/fastback/lang"
		into "$buildDir/resources/main/data/fastback/lang"
	}
}

sourceSets.test {
	resources.srcDirs = ["src/test/resources"]
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// https://github.com/modrinth/minotaur
modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "fastback"
	versionNumber = project.mod_version
	versionType = "alpha"
	uploadFile = remapJar
	changelog = "<p><a href='https://github.com/pcal43/fastback/releases/tag/${project.mod_version}'>https://github.com/pcal43/fastback/releases/tag/${project.mod_version}</a></p>"
	gameVersions = ["1.19.2"]
	loaders = ["fabric"]
	dependencies {
		required.project "fabric-api"
	}
}


 curseforge {
	apiKey = System.getenv("CURSEFORGE_TOKEN") ?: 'CURSEFORGE_TOKEN NOT_SET'

	project {
		id = "667417"
		releaseType = "release"
		changelog = "https://github.com/pcal43/fastback/releases/tag/${project.mod_version}"
		changelogType = "markdown"
		mod_version = project.mod_version
		releaseType = "beta"
		addGameVersion ((String) project.minecraft_version)
		addGameVersion "Fabric"
		mainArtifact(remapJar)

		afterEvaluate {
			uploadTask.dependsOn("remapJar")
		}
	}

	options {
		forgeGradleIntegration = false
	}
}