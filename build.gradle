plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url 'https://maven.nucleoid.xyz' }
}


configurations {
	// configuration that holds jars to include in the jar
	extraLibs
}

project.ext.versions = [
    jgit         : '6.2.0.202206071550-r',
    apache_sshd  : '2.8.0'
]

dependencies {
	// Fabric & Minecraft
	modImplementation  group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: versions.jgit
	include  group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: versions.jgit

	modImplementation  group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ssh.jsch', version: versions.jgit
	include group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ssh.jsch', version: versions.jgit

	modRuntimeOnly group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ssh.apache', version: versions.jgit
	include group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ssh.apache', version: versions.jgit

	//https://download.eclipse.org/jgit/site/6.2.0.202206071550-r/org.eclipse.jgit.ssh.apache/dependencies.html

	modRuntimeOnly group: 'org.apache.sshd', name: 'sshd-core', version: versions.apache_sshd
	include group: 'org.apache.sshd', name: 'sshd-core', version: versions.apache_sshd

	modRuntimeOnly group: 'org.apache.sshd', name: 'sshd-common', version: versions.apache_sshd
	include group: 'org.apache.sshd', name: 'sshd-common', version: versions.apache_sshd

	//modImplementation
	//runtimeOnly group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ui', version: versions.jgit
	//runtimeOnly group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.gpg.bc', version: versions.jgit


	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// JUnit
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
}


test {
	useJUnitPlatform()
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

sourceSets.test {
	resources.srcDirs = ["src/test/resources"]
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
//	from {
//		configurations.include.collect { it.isDirectory() ? it : zipTree(it) }
	//}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
